name: Semantic Release

on:
    push:
      branches:
        - main
jobs:
    release:
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.workflow }}-release-${{ github.ref_name }}
            cancel-in-progress: false

        permissions:
            id-token: write
            contents: write

        steps:
            - name: Setup | Checkout Repository on Release Branch
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                ref: ${{ github.ref_name }}
                fetch-depth: 0
                persist-credentials: false

            - name: Setup | Force release branch to be at workflow sha
              run: |
                git reset --hard ${{ github.sha }}

            - name: Evaluate | Verify upstream has NOT changed
                # Last chance to abort before causing an error as another PR/push was applied to
                # the upstream branch while this workflow was running. This is important
                # because we are committing a version change (--commit). You may omit this step
                # if you have 'commit: false' in your configuration.
                #
                # You may consider moving this to a repo script and call it from this step instead
                # of writing it in-line.
              shell: bash
              run: |
                set +o pipefail

                UPSTREAM_BRANCH_NAME="$(git status -sb | head -n 1 | cut -d' ' -f2 | grep -E '\.{3}' | cut -d'.' -f4)"
                printf '%s\n' "Upstream branch name: $UPSTREAM_BRANCH_NAME"

                set -o pipefail

                if [ -z "$UPSTREAM_BRANCH_NAME" ]; then
                    printf >&2 '%s\n' "::error::Unable to determine upstream branch name!"
                    exit 1
                fi

                git fetch "${UPSTREAM_BRANCH_NAME%%/*}"

                if ! UPSTREAM_SHA="$(git rev-parse "$UPSTREAM_BRANCH_NAME")"; then
                    printf >&2 '%s\n' "::error::Unable to determine upstream branch sha!"
                    exit 1
                fi

                HEAD_SHA="$(git rev-parse HEAD)"

                if [ "$HEAD_SHA" != "$UPSTREAM_SHA" ]; then
                    printf >&2 '%s\n' "[HEAD SHA] $HEAD_SHA != $UPSTREAM_SHA [UPSTREAM SHA]"
                    printf >&2 '%s\n' "::error::Upstream has changed, aborting release..."
                    exit 1
                fi

                printf '%s\n' "Verified upstream branch has not changed, continuing with release..."

            - name: Action | Semantic Version Release
              id: release
              uses: python-semantic-release/python-semantic-release@4d4cb0ab842247caea1963132c242c62aab1e4d5 # v10.4.1
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Install uv
              uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v6.6.1
              with:
                enable-cache: true

            - name: Set up Python
              uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
              with:
                python-version: '3.13'

            - name: Build package
              run: uv build

            - name: Publish | Upload package to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              if: steps.release.outputs.released == 'true'

            - name: Publish | Upload to GitHub Release Assets
              uses: python-semantic-release/publish-action@4681bbe581b99f950d7b6f14599870b6a117fdc1 # v10.4.0
              if: steps.release.outputs.released == 'true'
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                tag: ${{ steps.release.outputs.tag }}
